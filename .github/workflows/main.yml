name: Create New Discussion

# workflow_dispatch is enabled, and allows for a higher degree of control when creating new discussions. 
on:
  workflow_dispatch:
  #push:


jobs:
  create-new-discussion:
    runs-on: ubuntu-latest

    steps:

      # When creating a new discussion, it needs to be published to a category (e.g. "General"), using its unique id as identifier (e.g. "127hjkrj3").
      - name: Fetch and parse discussion categories
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          curl -X POST \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{
              \"query\": \"query { repository(owner: \\\"$REPO_OWNER\\\", name: \\\"$REPO_NAME\\\") { discussionCategories(first: 10) { nodes { id name description } } } }\"
            }" \
            https://api.github.com/graphql | jq -r '.data.repository.discussionCategories.nodes[] | "\(.id): \(.name)"'


      # Automatically gets the id of the repository, needed when publishing a new discussion.
      - name: Fetch repository ID via GraphQL
        id: fetch-repo-id
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "::set-output name=repo_id::$(curl -X POST \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"query":"query { repository(owner: \"h602119\", name: \"Goodtech_Praksis_workflow_discussion\") { id } }"}' \
          https://api.github.com/graphql | jq -r '.data.repository.id')"


      # Edit CATEGORY_ID, TITLE and BODY within env variables.
      # The publisher of this discussion will have the name "github_actions[bot]", in order to customize this, the use of a PAT is required.
      - name: Create a new discussion
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CATEGORY_ID: "DIC_kwDONnjXbM4Cl942"
          TITLE: "Hello World"
          BODY: "Hello World"
        run: |
          repo_id="${{ steps.fetch-repo-id.outputs.repo_id }}"
          
          response=$(curl -X POST \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d "{
              \"query\": \"mutation { createDiscussion(input: { repositoryId: \\\"$repo_id\\\", title: \\\"$TITLE\\\", body: \\\"$BODY\\\", categoryId: \\\"$CATEGORY_ID\\\" }) { discussion { id title url } } }\"
            }" \
            https://api.github.com/graphql)
            
          if echo "$response" | grep -q '"errors"'; then
            echo "Error: Failed to create discussion. Invalid CATEGORY_ID."
            exit 1
          fi
          echo "Discussion created successfully."


